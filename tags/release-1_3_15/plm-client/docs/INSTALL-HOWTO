This is the quick-n-dirty version of the install process.

This doc does not cover manual (non packaged) installs.  If you are installing
from .tar.gz please replace "install" with whatever your standard procedure is.

The service points involved in the PLM can be on multiple machines or a single 
server:
  [ASP]		Application Service Provider.  Requires a web server. 
  [DB]		Database.  Requires a Perl::DBI compatible database server.
  [EMAIL]	EMail frontend.  
  [WEB]		The external web server
  [ALL]		The collective ;-)

Installation points will be listed by service points indicating which machine
the action should be completed on.
 
-----=-----=-----

[WEB]	mkdir /var/plm
[WEB]	mkdir /var/plm/access
[WEB]	mkdir /var/plm/patch
[WEB]	chown -R www-data /var/plm
[WEB]	chgrp -R www-data /var/plm

[ASP]	Install the PLM package (lsb-compliant available so don't complain)
[EMAIL]	Install the PLM package
[WEB]	Install the PLM package

[ASP]	Install Apache or similar web server with cgi-bin abilities
[ASP]	Configure /etc/plm.cfg according to host requirements
[ASP]	chmod 0660 /etc/plm.cfg
[ASP]	touch /var/log/plm.log
[ASP]	chown www-data /etc/plm.cfg /var/log/plm.log
[ASP]	Install plm_server.pl.
	cp -p plm/scripts/ASP/plm_server.pl /usr/lib/cgi-bin/
	chmod +x /usr/lib/cgi-bin/plm_server.pl
	cp -p plm/scripts/ASP/plm /usr/lib/cgi-bin/
	cp -p plm/scripts/ASP/getpatch /usr/lib/cgi-bin/
	cp -Rp plm/website/docs/images /var/www/

[EMAIL]	Create a system user to receive mail for the PLM (patch, plm, submit...)
[EMAIL] Have email for the user piped through the plm_egate.pl program
	(use procmial if you want to limit submissions to one-at-a-time)
	(use /etc/aliases if you don't care)
[EMAIL]	Configure /etc/plm.cfg according to host requirements
[EMAIL]	chmod 0660 /etc/plm.cfg
[EMAIL]	touch /var/log/plm.log
[EMAIL]	chown username /etc/plm.cfg /var/log/plm.log
[EMAIL]	chown username /etc/plm.cfg /var/log/plm.log
[EMAIL]	sample of plm.cfg is in plm/config/plm.cfg

[DB]	Install Perl::DBI compatible database
[DB]	Configure the database to accept socket connections from [DB] & [ASP]
	(mysql) increase the packet max to the highest possible patch size
[DB]	Setup security on your database (passwords)
[DB]	Add a user for the PLM.  (will be refered to as user:plm from now on)
[DB]	Use the schema.sql file (as user:plm) to create the required tables
[DB]	Test connect from a manual client and `SELECT * FROM plm_index`

[MYSQL]	Create a root password, the administrator password for MySQL.
	/usr/bin/mysqladmin -u root password 'YES'
[MYSQL]	Start a database session.
	mysql -p new-password
[MYSQL]	Create the plm database.
	mysql> mysqladmin create plm 
[MYSQL]	Add a user for the PLM.
	plm/scripts/admin/plm_user -a robot
[MYSQL]	Create the required tables, mysql.SQL is in plm/docs/mysql.SQL.
	mysql> use plm
	mysql> source mysql.SQL

[SPRVR]	plm.cfg
[SPRVR]	Configure /etc/plm.cfg according to host requirements
[SPRVR]	chmod 0660 /etc/plm.cfg
[SPRVR]	touch /var/log/plm.log
[SPRVR]	chown username /etc/plm.cfg /var/log/plm.log
[SPRVR]	chown username /etc/plm.cfg /var/log/plm.log
[SPRVR]	plm_build_tree plm_supervisor.pl
[SPRVR]	cp plm/branding/* to webapp_data_dir (defined in plm.cfg)


[APCHE]	Edit the apache config file and add the following lines to enable
	PLM under mod_perl for:
	PerlSetEnv PERL5LIB /usr/share/plm/lib
	PerlModule Apache::DBI

[APCHE] Remember to add allow/deny rules for the asp_superviros.pl script if
        you have security requirements as this script does NOT require requests
	by authenticated.


---

The install process docs can obviously use some enhancing.  I am interested in 
questions for the FAQ as well.

