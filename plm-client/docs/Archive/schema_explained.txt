			Patch Lifecycle Management
			      DATABASE SCHEMA

Please see the Feature Specification and system diagram for further information
relating to the database schema.

DETAILED TABLE LISTING

Core List Tables:
	user		- Full user list and per-user system config settings
	patch		- Patch repository.  Patch included or on disk?

Context Tables:
	note		- Comments, notes, thoughts, bugs...
	filter		- List of 'tests' a submission is put through
	queue		- Canned search requests.  System or user specific
	group		- User owned group listing users it contains
	watch		- "Watch lists" - CC: users on activity when matched
	filter_state	- In-progress filter state tracking/coordination
	
Value Tables:
	p_state		- Potential state values for a patch
	progress	- Progress mappings for the hierarchy paths
	auth_req	- Types of authentication that are valid for a user
	
Junction Tables:
	user_to_watch	- Watch lists the user is on
	user_to_filter	- User-specific filter settings (reject/warn)
	user_to_queue	- User-created queue searches
	group_to_user	- Group<->user listings
	group_to_watch	- Watch lists a group is on
	patch_to_note	- Notes attached to a patch
	watch_to_queue	- Searches that define a watch list


DETAILED FIELD LISTINGS

TABLE: USER

The user table should describe everything about a particular user including 
system configuration for that user.

Fields:
	id		- User ID
	rsf		- Record state flag (active, inactive, deleted, admin)
	created		- Date user created
	deleted		- Date user deleted
	inactive	- Date user marked as inactive
	modified	- Last date user record modified
	accessed	- Last date the user used the system
	username	- Username for logging into the interfaces
	password	- Hash of the password
	gpgkey		- GPG public key
	auth_req	- Requirement code for valid authentication
	pub_cc		- User/group/email to CC: valid patch submissions to

TABLE: PATCH

Ahh, the lifeblood of the system.  Where would we be without patches?  
Lost. that's where.

Fields:
	id		- Patch ID
	rsf		- Record state flag
	created		- Date submitted to the system
	deleted		- Date deleted from the system
	modified        - Last date patch record modified
	accessed	- Last date the system used this patch
	submiter	- User ID of the developer who submitted the patch
	state		- Basic state tracking
	location	- Internal tracking of the location of patch content

TABLE: NOTE

Comments on patches, admin notes regarding users, bugs submitted against patches,
all that stuff goes here.

Fields:
	id		- Comment ID
	rsf		- Record state flag
	created         - Date note created
	deleted         - Date note deleted
	accessed        - Last date this note was used by the system
	text		- The actual note

TABLE: FILTER

This is a list of filters the Filter Manager runs against patches that match the 
queue(s) attached to this filter.

Fields:
	id		- Filter ID
	rsf		- Record state flag
	name		- User-visible name of this filter
	desc		- Description of the filter
	created		- Date filter was created
	deleted		- Date filter was deleted
	inactive	- Date filter was marked as inactive
	modified	- Date this filter record was last modified
	accessed	- Date this filter was last used
	est_time	- Estimated time the filter will run for
	command		- Command to execute to fun filter
	onfail		- Default pass failure action (XXX)

TABLE: QUEUE

This is not a listing of patches.  A "queue" is simply a canned search request.

	id		- Queue ID
	rsf		- Record state flag
	name		- User-visible name for this queue
	desc		- Admin/user notes on how this queue should work
	created		- Date of queue creation
	deleted		- Date of queue deletion
	inactive	- Date queue was set to inactive
	modified	- Date this queue was last modified
	accessed	- Date this queue last matched a search
	type		- Internal code for type of search
	match		- Data the queue search must match against (multi-line)

TABLE: GROUP

This table goes two ways.  When the boolean "owner" field is set, the field lists a 
group the user owns.  When the bit is not set, the field shows a user of the group.

Fields:
	id		- Group ID
	rsf		- Record state flag
	name		- User visible name for the group
	created		- Date the group was created
	deleted		- Date the group was deleted
	modified	- Date this group was last modified
	accessed	- Date this group was last used by the system
	user		- Owner or member depending on field "owner" setting
	owner		- Boolean (0=member, 1=owner)

TABLE: WATCH

A watch list is a saved search that is run against a patch at various points in the
processing of the patch.

Fields:
	id		- Watch ID
	rsf		- Record state flag
	name		- Name of the watch
	desc		- Description of what this watch should do
	created		- Date of creation
	deleted		- Date this watch was deleted
	modified	- Date this watch was modified
	accessed	- Date this was last used
	

TABLE: FILTER_STATE

This table provides the status of patch's filter results as well as a coordination 
point for the Filter Managers to keep track of which script is handling which
patch and so on

Fields:
	id		- Filter ID
	rsf		- Record state flag
	created


TABLE: P_STATE
TABLE: PROGRESS
TABLE: AUTH_REQ
TABLE: USER_TO_WATCH
TABLE: USER_TO_FILTER
TABLE: USER_TO_QUEUE
TABLE: GROUP_TO_USER
TABLE: GROUP_TO_WATCH
TABLE: PATCH_TO_NOTE
TABLE: WATCH_TO_QUEUE
