Refer to architecture.dia for a picture.

ASP:
The thing that maps all the functions required for XML-RPC.

Database:
MySQL database for our implementation

DBHandle:
I dunno.

getpatch:
Perl script to retrieve patches in bz2, display the patch in text or in HTML.

plm:
I'm not exactly sure.

plm_build_tree.pl:
Perl script to retrieve software and all patches to apply.

plm_report.pl:
Perl script to show an HTML index of select patches or a search form.

plm_report_results.pl:
Perl script to display the results from plm_report.

PLM:

plm_server:
Public XML-RPC server.

plm_private_server:
Private XML-RPC server, primarily for calls from Supervisor.

ResultSet:
This is an object for storing the database query results.  I think it was done this way to make getting the exact result easier.  This could be a problem for large queries and certainly causes unecessary copying when only the top rows are used.

Supervisor:
Perl script that queries PLM and determines what filters to run.

wget:
An external program to get stuff through HTTP.

XML:
Objects mostly for remote communication, where data is dumped, which can dump it to an XML block.  This block can be passed through the ASP and then parsed again at the other end.

Web Server:
Service for software repositories.
