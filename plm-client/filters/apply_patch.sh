#!/bin/bash

echo
echo Welcome to the [ Apply Patch ] Filter V1.2
echo

HOME=`pwd`
ID=$1
PATCH_OUT=patch.out
SOFTWARE=$2

if [ -n $ID ]; then
  PATCH_OUT=patch.$ID.out
else
  cd $SOFTWARE
  PATCH_OUT=patch.*.out
  cd ..
fi

# Clean out results from potential previous runs (debug testing...)
rm -f result.filter

# Create a line of the result file
log () {
  echo $@ >> $HOME/result.filter
  echo $@
}

#
# Pre-test versioning information
#
`gcc -v &> .tmp.gcc`
echo Version information for host [ `hostname` ]
echo " gcc:   " `grep version .tmp.gcc | cut -d\   -f3`
echo " ccache:" `ccache -V | grep ccache | cut -d\   -f3`
echo " patch: " `patch -v | grep patch | cut -d\   -f2`
echo
`rm -f .tmp.gcc`

echo "md5sum of available source [.patch .gz .bz2]"
[ -n "`ls plm-*.patch 2> /dev/null`" ] && md5sum plm-*.patch
[ -n "`ls *.gz 2> /dev/null`" ] && md5sum *.gz
[ -n "`ls *.bz2 2> /dev/null`" ] && md5sum *.bz2
echo
  
# 
# Test 1: Does the $SOFTWARE directory exist
#
if [ ! -d $SOFTWARE ]; then
  log RESULT: FAIL
  log RESULT-DETAIL: Missing $SOFTWARE directory
  exit 0
fi

cd $SOFTWARE

#
# Test 2: If there a patch logfile?  (was there a patch involved at all)
#

if [ ! -f $PATCH_OUT ]; then
  log RESULT: PASS
  log RESULT-DETAIL: This is a base source, no patch application detected
  exit 0
fi

# 
# Test 3: Detect an empty patch apply log
#

LOG=`cat $PATCH_OUT`

if [ -z "$LOG" ]; then
  log RESULT: FAIL
  log RESULT-DETAIL: Empty patch apply log, there was probably a problem
  exit 0
fi

# 
# Test 4: Detect failed or error messages in patch apply log
#

if [ ! `cat $PATCH_OUT | grep -c -i -e failed -e failure` == 0 ]; then
  log RESULT: FAIL
  log RESULT-DETAIL: Failures detected in the patch apply
  echo
  echo Contents of the patch apply log:
  echo
  cat $PATCH_OUT 
  exit 0
fi

#
# Test 5: Detect log generated by empty patch
#

if [ ! `cat $PATCH_OUT | grep -c "Hmm...  I can\'t seem to find a patch in there anywhere."` == 0 ]; then
  log RESULT: FAIL
  log RESULT-DETAIL: Patch didn\'t seem to contain any actual patch \(from diff\) data
  echo
  echo Contents of the patch apply log:
  echo
  cat patch.*.out
  exit 0
fi

#
# Test 6: Detect patch.error file
#

if [ -f patch.error ]; then
  log RESULT: FAIL
  log RESULT-DETAIL: Patch program did not exit with OK status
  echo
  echo Contents of the patch apply log:
  echo
  cat $PATCH_OUT
  exit 0
fi

#
# All Test Cases PAssed
#

log RESULT: PASS
log RESULT-DETAIL: There are no indications of a failed apply

cat $PATCH_OUT 
